@use "sass:math";
@import "/src/UI/_CommonStyles/mixins";

.container {
  margin-inline: auto;
  padding-inline: $min-content-side-margin;

  @include vw(md) {
    padding-inline: 0;
    width: 75%;
  }

  @include vw(xl) {
    width: $vw-lg;
  }
}

.page {
  > main,
  > aside > nav {
    margin-block: 15vmin;
  }

  &.no-top-margin-on-mobile > main {
    @include vw(sm) {
      margin-top: 0;
    }
  }

  &.simple {
    h1 {
      margin-bottom: 1em;
    }

    h2 {
      margin-block: 2em 1em;
    }

    p,
    span,
    ul {
      font-size: $variable-font-size-md;
      @include justify-text-on-large-screen;
    }

    ul {
      margin-bottom: 1.5em;

      > li:not(:first-of-type) {
        margin-top: 0.2em;
      }
    }

    p + ul {
      margin-top: -1.3em; // Compensates for the bottom-margin of the preceding `p`
    }
  }

  &.with-sidebar {
    display: flex;

    > aside,
    > main {
      flex-grow: 1;
    }

    > aside > nav > ul {
      @include make-all-list-items-same-length;

      width: max-content;

      margin-inline: auto;
      @include vw(md) {
        margin-right: $min-content-side-margin;
      }

      .button.transparent {
        width: 100%;
        justify-content: flex-start;

        &.active {
          background-color: $color-sidebar-link-active;
        }
      }
    }

    // Mobile, sidebar visible
    > aside {
      background-color: $color-sidebar-bg;
    }

    > main {
      display: none;
    }

    // Mobile, sidebar hidden
    &.sidebar-hidden {
      > aside {
        display: none;
      }

      > main {
        display: unset;
      }
    }

    // Desktop, sidebar always visible
    @include vw(md) {
      > aside {
        flex-basis: 25%;
        flex-grow: 0;
      }

      > main {
        display: unset;
      }

      .container {
        padding-inline: $min-content-side-margin;
      }
    }
  }

  span.basic-chip {
    display: inline-block;

    padding: 0.3em 0.5em 0.2em;
    border-radius: 0.3em;

    font-size: $variable-font-size-xs;
    color: $color-text-negative;
    background-color: $color-basic-chip-bg;

    &.negative {
      background-color: $color-basic-chip-bg-negative;
    }
  }

  p.fetching-message {
    margin-bottom: 0.5em;
  }

  section.bordered {
    font-size: $variable-font-size-sm;

    &:not(:first-of-type) {
      margin-top: 5vmax;

      @include cw(sm) {
        border-top: 1px solid $color-border;
        padding-top: 5vmax;
      }
    }

    @include cw(md) {
      border: 1px solid $color-border;
      border-radius: $border-radius-lg;
      padding: 1em;
    }

    h2 {
      font-size: $variable-font-size-md;
      margin-bottom: 0.5em;
    }
  }

  ul.following {
    display: grid;
    grid-template-columns: 1fr 1fr;

    $border-width: 10px;
    gap: $border-width;

    $vw-sm-md: math.div($vw-sm + $vw-md, 2);
    @container (min-width: #{$vw-sm-md}) {
      grid-template-columns: 1fr 1fr 1fr;
    }

    @include cw(md) {
      grid-template-columns: repeat(4, 1fr);
    }

    @include cw(lg) {
      grid-template-columns: repeat(5, 1fr);
    }

    position: relative;

    > .tooltip {
      right: 0.5em;
      top: -3.5em;
    }

    > li {
      transition: opacity #{$animation-duration-sm}s ease;

      border-radius: $border-radius-md;
      overflow: hidden; // So that the image doesn't overflow the border radius

      &[aria-selected="false"] {
        opacity: 0.3;
      }

      > .fade-in {
        position: relative;
        container-type: inline-size;
        aspect-ratio: 1; // To have the right height even before the images are loaded

        cursor: pointer;

        background-color: $color-item-placeholder;

        > img {
          aspect-ratio: 1;
          object-fit: cover;
          height: 100%; // Otherwise portrait images make the container too tall
        }

        $container-breakpoint: 170px;

        > span {
          position: absolute;
          bottom: 8%;
          left: 8%;

          $padding-right: 39px; // Space for checkbox
          padding-right: $padding-right;
          max-width: 150px + $padding-right;

          color: $color-text-negative;
          font-size: 18px;
          font-weight: 700;
          @include text-shadow;

          @container (min-width: #{$container-breakpoint}) {
            font-size: 20px;
          }
        }

        > .check-icon-wrapper {
          position: absolute;
          right: 6%;
          bottom: 5%;

          > svg {
            color: $color-icon-primary;
            @include svg-shadow;
            @include img-size(1.1em);
          }

          @container (min-width: #{$container-breakpoint}) {
            bottom: 4%;

            > svg {
              @include img-size(1.4em);
            }
          }
        }
      }
    }

    &.artists > li > .fade-in::after {
      content: "";

      position: absolute;
      top: 6%;
      left: 6%;

      background-image: url("/images/Spotify_Icon_RGB_White.png");
      background-repeat: no-repeat;
      @include img-size(10%);
    }
  }
}
