@import "./colors";
@import "./numbers";
@import "./mixins";

$min-button-size: 40px;

@mixin button-reset {
  cursor: pointer;
  background-color: transparent;
  padding: 0;
  border: 0;
}

button.button:not([role="tab"]),
a.button:not([role="tab"]) {
  @include button-reset;

  display: inline-flex;
  justify-content: center;
  align-items: center;

  min-height: $min-button-size;
  min-width: $min-button-size;

  color: $color-btn-text;

  transition: opacity #{$animation-duration-sm}s ease;
}

button.button:not(.icon-only),
a.button:not(.icon-only) {
  @include to-right-red-gradient;
  background-size: 0 100%;
  background-position: left center;
  background-repeat: no-repeat;

  transition: all #{$animation-duration-sm}s ease; // background-size color opacity

  font-size: $variable-font-size-sm;
  font-weight: 400;
  color: $color-btn-text-pre-filled;

  padding-inline: 0.7em;
  border-radius: max(0.1em, 3px);

  &.filling,
  &.filled {
    background-size: 100% 100%;
    color: $color-btn-text;
  }

  &.transparent-bordered {
    color: $color-btn-text-pre-filled;
    background-image: none;
    border: 0.1em solid $color-btn-border;

    &:hover {
      color: $color-btn-text;
      @include to-right-red-gradient;
      background-size: 100% 100%;
      border-color: transparent;
    }
  }

  &.rounded {
    border-radius: 1.2em;
  }

  &.spotify {
    color: $color-btn-text;
    background: $color-btn-bg-spotify;
  }

  > span {
    padding-block: 0.35em 0.4em;
  }

  &.lg {
    font-size: $variable-font-size-lg;
  }

  &.fixed-height { // Used in modals
    font-size: 18px;
    border-width: 2px;

    > span {
      padding-block: 0;
    }
  }


  // Left icon

  > svg,
  > img {
    margin-right: 0.5em;
  }


  // Loader

  &.loading { // Because `&:has(> .circular-loader) {` isn't supported on Firefox
    position: relative;

    > .circular-loader {
      position: absolute;

      > .MuiCircularProgress-root .MuiCircularProgress-progress {
        stroke: $color-btn-text;
      }
    }

    > span {
      visibility: hidden;
    }
  }

  &[disabled] {
    cursor: default;
    opacity: 0.3;
  }
}

a.button {
  text-decoration: none;
}

.button.icon-only {
  border-radius: 50%;

  > svg {
    color: $color-icon-dark;
  }

  &:hover {
    background-color: $color-btn-bg-icon-only-dark-hover;
  }

  &.light {
    > svg {
      color: $color-icon-light;
    }

    &:hover {
      background-color: $color-btn-bg-icon-only-light-hover;
    }
  }

  &:not(:hover).bordered {
    border: 2px solid $color-icon-dark;

    &.light {
      border-color: $color-icon-light;
    }
  }
}

button.underlined {
  @include button-reset;
  color: $color-link;
  font-size: $variable-font-size-sm;
  @include underlined;
}
