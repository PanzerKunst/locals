@import "./colors";
@import "./numbers";
@import "./mixins";

$min-button-size: 40px;

button,
a.button {
  display: inline-flex;
  justify-content: center;
  align-items: center;

  cursor: pointer;
  color: $color-btn-text;
  padding: 0;
  border: 0;

  min-height: $min-button-size;
  min-width: $min-button-size;

  transition: opacity #{$animation-duration-sm}s ease;

  &:hover {
    opacity: 0.9;
  }
}

button:not(.icon-only),
a.button:not(.icon-only) {
  font-weight: 400;

  @include to-right-red-gradient;
  background-size: 0 100%;
  background-position: left center;
  background-repeat: no-repeat;

  transition: all #{$animation-duration-sm}s ease; // background-size color opacity

  color: $color-btn-text-pre-filled;

  &.filling {
    background-size: 100% 100%;
    color: $color-btn-text;
  }

  &.skewed {
    $skew: -10deg;
    transform: skewX($skew);

    > * {
      transform: skewX(-$skew);
    }
  }

  > svg,
  > img {
    @include img-size(24px);
    margin-right: 10px;
  }

  // Size

  padding-inline: 1em;
  font-size: $variable-font-size;

  &.rounded {
    border-radius: 1.2em;
  }

  > span {
    padding-block: 0.5em 0.6em;
  }

  &.spotify {
    color: $color-btn-text;
    background: $color-btn-bg-spotify;
  }

  &[disabled] {
    cursor: default;
    opacity: 0.3;
  }
}

a.button {
  text-decoration: none;
}

button.icon-only,
a.button.icon-only {
  border: none;
  outline: none;
  background: none;

  color: $color-icon;

  svg {
    /* @include svg-size(40px);

    transition: all #{$animation-duration-sm}s ease-in-out; // Smooth transition for transform
    transform: scale(1); // Default scale */
  }

  /* &:hover svg {
    transform: scale(1.2); // Slightly larger scale on hover
  } */
}
